{"version":3,"sources":["containers/DialerPage/index.js"],"names":["mapToProps","_","call","callingSettings","connectivityMonitor","locale","rateLimiter","currentLocale","callingMode","callButtonDisabled","isIdle","connectivity","throttling","toNumber","mapToFunctions","keepToNumber","value","onToNumberChange","onCall","DialerPage","propTypes","instanceOf","isRequired","default"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QAMG;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,eAIC,QAJDA,eAIC;AAAA,MAHDC,mBAGC,QAHDA,mBAGC;AAAA,MAFDC,MAEC,QAFDA,MAEC;AAAA,MADDC,WACC,QADDA,WACC;;AACD,SAAO;AACLC,mBAAeF,OAAOE,aADjB;AAELC,iBAAaL,gBAAgBK,WAFxB;AAGLC,wBAAoB,CAACP,KAAKQ,MAAN,IACjB,CAACN,oBAAoBO,YADJ,IAEjBL,YAAYM,UALV;AAMLC,cAAUX,KAAKW;AANV,GAAP;AAQD;;AAED,SAASC,cAAT,CAAwBb,CAAxB,SAEG;AAAA,MADDC,IACC,SADDA,IACC;;AACD,SAAO;AACLa,kBAAc,sBAACC,KAAD,EAAW;AACvBd,WAAKe,gBAAL,CAAsBD,KAAtB;AACD,KAHI;AAILE,YAAQ,kBAAM;AACZhB,WAAKgB,MAAL;AACD;AANI,GAAP;AAQD;;AAED,IAAMC,aAAa,yBACjBnB,UADiB,EAEjBc,cAFiB,wBAAnB;;AAKA,IAAMM,YAAY;AAChBlB,QAAM,iBAAUmB,UAAV,iBAA2BC,UADjB;AAEhBnB,mBAAiB,iBAAUkB,UAAV,4BAAsCC,UAFvC;AAGhBlB,uBAAqB,iBAAUiB,UAAV,gCAA0CC,UAH/C;AAIhBjB,UAAQ,iBAAUgB,UAAV,mBAA6BC,UAJrB;AAKhBhB,eAAa,iBAAUe,UAAV,wBAAkCC;AAL/B,CAAlB;;AAQAH,WAAWC,SAAX,GAAuBA,SAAvB;;QAGEN,c,GAAAA,c;QACAd,U,GAAAA,U;QACAoB,S,GAAAA,S;QACcG,O,GAAdJ,U","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport { PropTypes } from 'react';\n\nimport Locale from 'ringcentral-integration/modules/Locale';\nimport CallingSettings from 'ringcentral-integration/modules/CallingSettings';\nimport Call from 'ringcentral-integration/modules/Call';\nimport ConnectivityMonitor from 'ringcentral-integration/modules/ConnectivityMonitor';\nimport RateLimiter from 'ringcentral-integration/modules/RateLimiter';\n\nimport DialerPanel from '../../components/DialerPanel';\n\nfunction mapToProps(_, {\n  call,\n  callingSettings,\n  connectivityMonitor,\n  locale,\n  rateLimiter,\n}) {\n  return {\n    currentLocale: locale.currentLocale,\n    callingMode: callingSettings.callingMode,\n    callButtonDisabled: !call.isIdle\n    || !connectivityMonitor.connectivity\n    || rateLimiter.throttling,\n    toNumber: call.toNumber,\n  };\n}\n\nfunction mapToFunctions(_, {\n  call,\n}) {\n  return {\n    keepToNumber: (value) => {\n      call.onToNumberChange(value);\n    },\n    onCall: () => {\n      call.onCall();\n    },\n  };\n}\n\nconst DialerPage = connect(\n  mapToProps,\n  mapToFunctions,\n)(DialerPanel);\n\nconst propTypes = {\n  call: PropTypes.instanceOf(Call).isRequired,\n  callingSettings: PropTypes.instanceOf(CallingSettings).isRequired,\n  connectivityMonitor: PropTypes.instanceOf(ConnectivityMonitor).isRequired,\n  locale: PropTypes.instanceOf(Locale).isRequired,\n  rateLimiter: PropTypes.instanceOf(RateLimiter).isRequired,\n};\n\nDialerPage.propTypes = propTypes;\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  propTypes,\n  DialerPage as default,\n};\n"]}