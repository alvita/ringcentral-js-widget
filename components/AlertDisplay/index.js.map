{"version":3,"sources":["components/AlertDisplay/index.js"],"names":["Message","props","alertHolder","level","message","dismiss","onDismiss","propTypes","string","isRequired","node","func","AlertDisplay","root","className","messages","map","Renderer","getRenderer","id","currentLocale","arrayOf","shape","payload","any","defaultProps","undefined"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA;;AAEA,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,SACE;AAAA;AAAA,MAAK,WAAW,iBAAOC,WAAvB;AACE;AAAA;AAAA;AACE,mBAAW,0BACT,iBAAOD,MAAME,KAAb,CADS,CADb;AAIIF,YAAMG,OAJV;AAKE;AAAA;AAAA;AACE,qBAAW,iBAAOC,OADpB;AAEE,mBAASJ,MAAMK,SAFjB;AAGE,6CAAG,WAAW,0BAAW,IAAX,EAAiB,UAAjB,CAAd;AAHF;AALF;AADF,GADF;AAeD;AACDN,QAAQO,SAAR,GAAoB;AAClBJ,SAAO,iBAAUK,MAAV,CAAiBC,UADN;AAElBL,WAAS,iBAAUM,IAAV,CAAeD,UAFN;AAGlBH,aAAW,iBAAUK,IAAV,CAAeF;AAHR,CAApB;;AAMA,SAASG,YAAT,CAAsBX,KAAtB,EAA6B;AAC3B,SACE;AAAA;AAAA,MAAK,WAAW,0BAAW,iBAAOY,IAAlB,EAAwBZ,MAAMa,SAA9B,CAAhB;AAEIb,UAAMc,QAAN,CAAeC,GAAf,CAAmB,UAACZ,OAAD,EAAa;AAC9B,UAAMa,WAAWhB,MAAMiB,WAAN,CAAkBd,OAAlB,CAAjB;AACA,UAAI,CAACa,QAAL,EAAe,OAAO,IAAP;AACf,aACE,8BAAC,OAAD;AACE,aAAKb,QAAQe,EADf;AAEE,eAAOf,QAAQD,KAFjB;AAGE,iBACE,8BAAC,QAAD;AACE,mBAASC,OADX;AAEE,yBAAeH,MAAMmB;AAFvB,UAJJ;AASE,mBAAW,qBAAM;AACfnB,gBAAMI,OAAN,CAAcD,QAAQe,EAAtB;AACD;AAXH,QADF;AAeD,KAlBD;AAFJ,GADF;AAyBD;AACDP,aAAaL,SAAb,GAAyB;AACvBO,aAAW,iBAAUN,MADE;AAEvBO,YAAU,iBAAUM,OAAV,CAAkB,iBAAUC,KAAV,CAAgB;AAC1CH,QAAI,iBAAUX,MAAV,CAAiBC,UADqB;AAE1CN,WAAO,iBAAUK,MAAV,CAAiBC,UAFkB;AAG1CL,aAAS,iBAAUI,MAAV,CAAiBC,UAHgB;AAI1Cc,aAAS,iBAAUC;AAJuB,GAAhB,CAAlB,CAFa;AAQvBN,eAAa,iBAAUP,IARA;AASvBN,WAAS,iBAAUM,IAAV,CAAeF,UATD;AAUvBW,iBAAe,iBAAUZ,MAAV,CAAiBC;AAVT,CAAzB;AAYAG,aAAaa,YAAb,GAA4B;AAC1BP,eAAa;AAAA,WAAMQ,SAAN;AAAA;AADa,CAA5B;;kBAIed,Y","file":"index.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport classnames from 'classnames';\nimport 'font-awesome/css/font-awesome.css';\nimport styles from './styles.scss';\n\n// TODO animation\n\nfunction Message(props) {\n  return (\n    <div className={styles.alertHolder}>\n      <div\n        className={classnames(\n          styles[props.level],\n        )}>\n        { props.message }\n        <div\n          className={styles.dismiss}\n          onClick={props.onDismiss}>\n          <i className={classnames('fa', 'fa-times')} />\n        </div>\n      </div>\n    </div>\n  );\n}\nMessage.propTypes = {\n  level: PropTypes.string.isRequired,\n  message: PropTypes.node.isRequired,\n  onDismiss: PropTypes.func.isRequired,\n};\n\nfunction AlertDisplay(props) {\n  return (\n    <div className={classnames(styles.root, props.className)}>\n      {\n        props.messages.map((message) => {\n          const Renderer = props.getRenderer(message);\n          if (!Renderer) return null;\n          return (\n            <Message\n              key={message.id}\n              level={message.level}\n              message={\n                <Renderer\n                  message={message}\n                  currentLocale={props.currentLocale}\n                />\n              }\n              onDismiss={() => {\n                props.dismiss(message.id);\n              }}\n            />\n          );\n        })\n      }\n    </div>\n  );\n}\nAlertDisplay.propTypes = {\n  className: PropTypes.string,\n  messages: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    level: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n    payload: PropTypes.any,\n  })),\n  getRenderer: PropTypes.func,\n  dismiss: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n};\nAlertDisplay.defaultProps = {\n  getRenderer: () => undefined,\n};\n\nexport default AlertDisplay;\n"]}