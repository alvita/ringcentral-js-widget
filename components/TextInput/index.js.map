{"version":3,"sources":["components/TextInput/index.js"],"names":["TextInput","props","state","value","root","className","invalid","onChange","placeholder","disabled","readOnly","pattern","maxLength","name","defaultValue","input","onKeyDown","propTypes","string","func","bool","number","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;IAEMA,S;;;AACJ,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA,4IACVA,KADU;;AAEhB,UAAKC,KAAL,GAAa;AACXC,aAAQF,MAAME,KAAP,GAAgBF,MAAME,KAAtB,GAA8B;AAD1B,KAAb;AAFgB;AAKjB;;;;6BAEQ;AACP,UAAMF,QAAQ,KAAKA,KAAnB;AACA;AACA,aACE;AAAA;AAAA;AACE,qBAAW,0BACT,iBAAOG,IADE,EAETH,MAAMI,SAFG,EAGTJ,MAAMK,OAAN,IAAiB,iBAAOA,OAHf,CADb;AAME;AACE,oBAAUL,MAAMM,QADlB;AAEE,uBAAaN,MAAMO,WAFrB;AAGE,oBAAUP,MAAMQ,QAHlB;AAIE,oBAAUR,MAAMS,QAJlB;AAKE,mBAAST,MAAMU,OALjB;AAME,qBAAWV,MAAMW,SANnB;AAOE,gBAAMX,MAAMY,IAPd;AAQE,iBAAOZ,MAAME,KARf;AASE,wBAAcF,MAAMa,YATtB;AAUE,qBAAW,0BAAW,iBAAOC,KAAlB,CAVb;AAWE,qBAAWd,MAAMe;AAXnB;AANF,OADF;AAsBD;;;;;AAGHhB,UAAUiB,SAAV,GAAsB;AACpBZ,aAAW,iBAAUa,MADD;AAEpBX,YAAU,iBAAUY,IAFA;AAGpBX,eAAa,iBAAUU,MAHH;AAIpBT,YAAU,iBAAUW,IAJA;AAKpBV,YAAU,iBAAUU,IALA;AAMpBT,WAAS,iBAAUO,MANC;AAOpBN,aAAW,iBAAUS,MAPD;AAQpBR,QAAM,iBAAUK,MARI;AASpBf,SAAO,iBAAUe,MATG;AAUpBJ,gBAAc,iBAAUI,MAVJ;AAWpBZ,WAAS,iBAAUc,IAXC;AAYpBJ,aAAW,iBAAUG;AAZD,CAAtB;AAcAnB,UAAUsB,YAAV,GAAyB;AACvBjB,aAAW,iBAAOU;AADK,CAAzB;;kBAKef,S","file":"index.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nclass TextInput extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      value: (props.value) ? props.value : ''\n    };\n  }\n\n  render() {\n    const props = this.props;\n    // console.debug('class',props.className);\n    return (\n      <div\n        className={classnames(\n          styles.root,\n          props.className,\n          props.invalid && styles.invalid,\n          )}>\n        <input\n          onChange={props.onChange}\n          placeholder={props.placeholder}\n          disabled={props.disabled}\n          readOnly={props.readOnly}\n          pattern={props.pattern}\n          maxLength={props.maxLength}\n          name={props.name}\n          value={props.value}\n          defaultValue={props.defaultValue}\n          className={classnames(styles.input)}\n          onKeyDown={props.onKeyDown}\n        />\n      </div>\n    );\n  }\n}\n\nTextInput.propTypes = {\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  pattern: PropTypes.string,\n  maxLength: PropTypes.number,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  defaultValue: PropTypes.string,\n  invalid: PropTypes.bool,\n  onKeyDown: PropTypes.func,\n};\nTextInput.defaultProps = {\n  className: styles.input\n};\n\n\nexport default TextInput;\n"]}