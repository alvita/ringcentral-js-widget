{"version":3,"sources":["components/RegionSettingsAlert/index.js"],"names":["RegionSettingsAlert","message","currentLocale","regionSettingsUrl","msg","dialingPlansChanged","regionSettings","getString","regionSettingsLink","propTypes","shape","string","isRequired","handleMessage","saveSuccess","areaCodeInvalid"],"mappings":";;;;;kBAOwBA,mB;;AAPxB;;;;AACA;;AACA;;;;AAEA;;;;AACA;;;;;;AAEe,SAASA,mBAAT,OAMZ;AAAA,MAJCC,OAID,QALDA,OAKC,CAJCA,OAID;AAAA,MAFDC,aAEC,QAFDA,aAEC;AAAA,MADDC,iBACC,QADDA,iBACC;;AACD,MAAIC,YAAJ;AACA,UAAQH,OAAR;AACE,SAAK,iCAAuBI,mBAA5B;AAAiD;AAC/C,YAAMC,iBAAiB,eAAKC,SAAL,CAAe,gBAAf,EAAiCL,aAAjC,CAAvB;AACAE,cACE;AACE,mBAAS,eAAKG,SAAL,CAAeN,OAAf,EAAwBC,aAAxB,CADX;AAEE,kBAAQ,EAAEM,oBAAoB;AAAA;AAAA,gBAAM,IAAIL,iBAAV;AAA8BG;AAA9B,aAAtB,EAFV,GADF;AAKD;AACC;AACF;AACEF,YAAM,eAAKG,SAAL,CAAeN,OAAf,EAAwBC,aAAxB,CAAN;AACA;AAZJ;AAcA,SACE;AAAA;AAAA;AACGE;AADH,GADF;AAKD;AACDJ,oBAAoBS,SAApB,GAAgC;AAC9BR,WAAS,iBAAUS,KAAV,CAAgB;AACvBT,aAAS,iBAAUU,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAH2B;AAI9BT,qBAAmB,iBAAUQ,MAAV,CAAiBC,UAJN;AAK9BV,iBAAe,iBAAUS,MAAV,CAAiBC;AALF,CAAhC;AAOAZ,oBAAoBa,aAApB,GAAoC;AAAA,MAAGZ,OAAH,SAAGA,OAAH;AAAA,SAClCA,YAAY,iCAAuBa,WAAnC,IACAb,YAAY,iCAAuBI,mBADnC,IAEAJ,YAAY,iCAAuBc,eAHD;AAAA,CAApC","file":"index.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport { Link } from 'react-router';\nimport regionSettingsMessages from\n  'ringcentral-integration/modules/RegionSettings/regionSettingsMessages';\nimport FormattedMessage from '../FormattedMessage';\nimport i18n from './i18n';\n\nexport default function RegionSettingsAlert({\n  message: {\n    message\n  },\n  currentLocale,\n  regionSettingsUrl,\n}) {\n  let msg;\n  switch (message) {\n    case regionSettingsMessages.dialingPlansChanged: {\n      const regionSettings = i18n.getString('regionSettings', currentLocale);\n      msg = (\n        <FormattedMessage\n          message={i18n.getString(message, currentLocale)}\n          values={{ regionSettingsLink: <Link to={regionSettingsUrl}>{regionSettings}</Link> }} />\n      );\n    }\n      break;\n    default:\n      msg = i18n.getString(message, currentLocale);\n      break;\n  }\n  return (\n    <div>\n      {msg}\n    </div>\n  );\n}\nRegionSettingsAlert.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  regionSettingsUrl: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n};\nRegionSettingsAlert.handleMessage = ({ message }) => (\n  message === regionSettingsMessages.saveSuccess ||\n  message === regionSettingsMessages.dialingPlansChanged ||\n  message === regionSettingsMessages.areaCodeInvalid\n);\n"]}